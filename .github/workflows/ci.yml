# .github/workflows/ci.yml
name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

    # # paths-ignore:
    # #   - '**.md'
    # paths:
    #     - Dockerfile
    #     - .github/workflows/ci.yaml

# Environment variables available to all jobs and steps in this workflow
env:
    NODE_VERSION: 22
    DOCKER_REGISTRY: docker.io #ghcr.io
    DOCKER_IMAGE_NAME: ntdtfr/ezloc-web-app #${{ github.repository }}

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: ${{ env.NODE_VERSION }}
            cache: 'npm'

        - name: Install dependencies
          run: npm ci

        - name: Run linter
          run: npm run lint

        - name: Run unit tests
          run: npm run test:unit

        - name: Build Vue.js app
          run: npm run build

        - name: Upload build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: dist
            path: dist/
            retention-days: 1

    test:
      runs-on: ubuntu-latest
      needs:
        - build
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Shallow clones should be disabled for better SonarQube analysis

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: ${{ env.NODE_VERSION }}
            cache: 'npm'

        - name: Install dependencies
          run: npm ci

        - name: Download build artifacts
          uses: actions/download-artifact@v4
          with:
            name: dist
            path: dist/

        - name: Run E2E tests
          run: npm run test:e2e --headless

    # quality-gates:
    #   runs-on: ubuntu-latest
    #   needs:
    #     - build
    #   steps:
    #     - name: SonarQube Quality Gates
    #       uses: SonarSource/sonarcloud-github-action@master
    #       env:
    #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #       with:
    #         sonarToken: ${{ secrets.SONAR_TOKEN }}
    #         sonarProjectKey: ${{ github.repository }}
    #         sonarOrganization: ${{ github.repository_owner }}
    #         sonarQualityGate: 'WARN'

    # docker-prepare:
    #     runs-on: ubuntu-latest
    #     needs:
    #       - build
    #     # Only run this job if we're on main, develop branch or pushing a tag
    #     if: github.event_name != 'pull_request'
    #     outputs:
    #       matrix: ${{ steps.platforms.outputs.matrix }}
    #     steps:
    #       - name: Checkout repository
    #         uses: actions/checkout@v4

    #       - name: Create matrix
    #         id: platforms
    #         run: |
    #           echo "matrix=$(docker buildx bake production --file ./docker-bake.hcl --print | jq -cr '.target."production".platforms')" >>${GITHUB_OUTPUT}

    #       - name: Show matrix
    #         run: |
    #           echo ${{ steps.platforms.outputs.matrix }}

    #       - name: Extract Docker metadata
    #         id: meta
    #         uses: docker/metadata-action@v5
    #         with:
    #           images: |
    #             ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
    #           # tags: |
    #           #   type=ref,event=branch
    #           #   type=ref,event=pr
    #           #   type=semver,pattern={{version}}
    #           #   type=semver,pattern={{major}}.{{minor}}
    #           #   type=sha,format=short
    #           tags: |
    #             # dynamically set the branch name and sha as a custom tag
    #             type=raw,value=1.0.0-{{branch}}-{{sha}}
    #             # type=match,pattern=(.*)-r,group=1
    #             # type=ref,event=pr
    #             # type=edge
    #           labels: |
    #             org.opencontainers.image.title=Ezloc Web Application
    #             org.opencontainers.image.description=Web application for Ezloc project
    #             org.opencontainers.image.vendor=ntdt

    #       - name: Rename meta bake definition file
    #         run: |
    #           mv "${{ steps.meta.outputs.bake-file }}" "/tmp/bake-meta.json"

    #       - name: Upload meta bake definition
    #         uses: actions/upload-artifact@v4
    #         with:
    #           name: bake-meta
    #           path: /tmp/bake-meta.json
    #           if-no-files-found: error
    #           retention-days: 1

    docker-build-and-push:
      needs: build
      runs-on: ubuntu-latest
      # Only run this job if we're on main branch or pushing a tag
      if: github.event_name != 'pull_request'
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Download build artifacts
          uses: actions/download-artifact@v3
          with:
            name: dist
            path: dist/

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Extract Docker metadata
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tags: |
              type=ref,event=branch
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=sha,format=short

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            registry: ${{ env.DOCKER_REGISTRY }}
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}

        - name: Build and push Docker image with Bake
          uses: docker/bake-action@v2
          with:
            files: |
              ./docker-bake.hcl
              ${{ steps.meta.outputs.bake-file }}
            targets: production
            push: true
            set: |
              *.cache-from=type=gha
              *.cache-to=type=gha,mode=max


    # docker-build-and-push:
    #     runs-on: ubuntu-latest
    #     needs:
    #       - docker-prepare
    #     # # Only run this job if we're on main, develop branch or pushing a tag
    #     # if: github.event_name != 'pull_request'
    #     permissions:
    #       contents: read
    #       packages: write
    #     strategy:
    #         fail-fast: false
    #         matrix:
    #           platform: ${{ fromJson(needs.docker-prepare.outputs.matrix) }}
    #     steps:
    #       - name: Prepare
    #         run: |
    #           platform=${{ matrix.platform }}
    #           echo "PLATFORM=${platform//\//-}" >> $GITHUB_ENV

    #       - name: Checkout repository
    #         uses: actions/checkout@v4

    #       - name: Download meta bake definition
    #         uses: actions/download-artifact@v4
    #         with:
    #           name: bake-meta
    #           path: /tmp

    #       - name: Set up QEMU
    #         uses: docker/setup-qemu-action@v3

    #       - name: Set up Docker Buildx
    #         uses: docker/setup-buildx-action@v3
    #         with:
    #           buildkitd-flags: "--debug"

    #       - name: Login to DockerHub
    #         uses: docker/login-action@v3
    #         with:
    #           registry: ${{ env.DOCKER_REGISTRY }}
    #           username: ${{ secrets.DOCKER_USERNAME }}
    #           password: ${{ secrets.DOCKER_PASSWORD }}

    #       # - name: Login to GHCR
    #       #   uses: docker/login-action@v3
    #       #   with:
    #       #     registry: ghcr.io
    #       #     username: ${{ github.repository_owner }}
    #       #     password: ${{ secrets.GITHUB_TOKEN }}

    #       - name: Build image with Bake
    #         id: bake
    #         uses: docker/bake-action@v5  # https://github.com/docker/bake-action
    #         with:
    #           workdir: .
    #           files: |
    #             ./docker-bake.hcl
    #             /tmp/bake-meta.json
    #           targets: production
    #           #push: true
    #           set: |
    #             *.tags=
    #             *.platform=${{ matrix.platform }}
    #             *.cache-from=type=gha,scope=build-${{ env.PLATFORM }}
    #             *.cache-to=type=gha,scope=build-${{ env.PLATFORM }}
    #             *.output=type=image,"name=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}",push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}

    #       - name: Export digest
    #         run: |
    #           mkdir -p /tmp/digests
    #           digest="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
    #           touch "/tmp/digests/${digest#sha256:}"

    #       - name: Upload digest
    #         uses: actions/upload-artifact@v4
    #         with:
    #           name: digests-${{ env.PLATFORM }}
    #           path: /tmp/digests/*
    #           if-no-files-found: error
    #           retention-days: 1

    # docker-merge-digests:
    #     runs-on: ubuntu-latest
    #     needs:
    #       - docker-build-and-push
    #     if: github.event_name != 'pull_request'
    #     steps:
    #     - name: Download meta bake definition
    #       uses: actions/download-artifact@v4
    #       with:
    #         name: bake-meta
    #         path: /tmp

    #     - name: Download digests
    #       uses: actions/download-artifact@v4
    #       with:
    #         path: /tmp/digests
    #         pattern: digests-*
    #         merge-multiple: true

    #     - name: Set up Docker Buildx
    #       uses: docker/setup-buildx-action@v3

    #     - name: Login to DockerHub
    #       uses: docker/login-action@v3
    #       with:
    #         registry: ${{ env.DOCKER_REGISTRY }}
    #         username: ${{ secrets.DOCKER_USERNAME }}
    #         password: ${{ secrets.DOCKER_PASSWORD }}

    #     # - name: Login to GHCR
    #     #   uses: docker/login-action@v3
    #     #   with:
    #     #     registry: ghcr.io
    #     #     username: ${{ github.repository_owner }}
    #     #     password: ${{ secrets.GITHUB_TOKEN }}

    #     - name: Create manifest list and push
    #       working-directory: /tmp/digests
    #       run: |
    #         docker buildx imagetools create $(jq -cr '.target."docker-metadata-action".tags | map(select(startswith("${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}")) | "-t " + .) | join(" ")' /tmp/bake-meta.json) \
    #             $(printf '${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}@sha256:%s ' *)

    #     - name: Inspect image
    #       run: |
    #         tag=$(jq -r '.target."docker-metadata-action".args.DOCKER_META_VERSION' /tmp/bake-meta.json)
    #         docker buildx imagetools inspect ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${tag}
